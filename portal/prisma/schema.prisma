generator client {
  provider = "prisma-client-js"
  engineType = "library"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Token {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  token String
}

model VerificationToken {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  token    String
  user     User     @relation(fields: [userId], references: [id])
  userId   String   @db.ObjectId
  createdAt DateTime @default(now())
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  email     String   @unique
  password  String
  isVerified Boolean    @default(false)
  podcasts  Feature[]
  VerificationToken  VerificationToken[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Feature {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String     @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  categories  Category[] @relation(fields: [categoryIDs], references: [id])
  categoryIDs String[]   @db.ObjectId
  trendings     Trending[]
  podcasts  Podcast[]
  isPublic     Boolean     @default(true)
}

model Podcast {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  openingSentence String
  audioFile       String
  conversation    Json
  summary         String
  article         Json
  length          String
  hosts           String[]
  img             String?
  feature         Feature  @relation(fields: [featureId], references: [id])
  featureId       String   @db.ObjectId
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  content  String
  features  Feature[] @relation(fields: [featureIDs], references: [id])
  featureIDs String[]   @db.ObjectId
  type     String?
}

model Trending {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  feature    Feature  @relation(fields: [featureId], references: [id])
  featureId  String   @db.ObjectId
  clicks     Int      @default(0)
  date       DateTime @default(now())
}

enum CategoryType {
  TECHNICAL
  MEDICAL
  PDF
  BLOG
}